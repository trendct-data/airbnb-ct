region<- as.character(region$content)
city<- filtered %>%
filter(property=="airbedandbreakfast:city")
city<- as.character(city$content)
if (is.character(city) && length(city) == 0) {
city <- ""
} else {
city <- city
}
rating<- filtered %>%
filter(property=="airbedandbreakfast:rating")
rating<- as.character(rating$content)
if (is.character(rating) && length(rating) == 0) {
rating <- ""
} else {
rating <- rating
}
price<- filtered %>%
filter(itemprop=="price")
price<- as.numeric(as.character(price$content))
if (length(price)==0) {
price <- 999
} else {
prince <- price
}
}
print(i)
air_listing <- data.frame(link, latitude, longitude, locality, region, city, rating, price)
if (exists("airbnb_df")) {
airbnb_df <- rbind(airbnb_df, air_listing)
} else {
airbnb_df <- air_listing
}
}
clean <- subset(airbnb_df, !(latitude==999))
leftovers <- subset(airbnb_df, latitude==999)
for (i in 607:nrow(url_list)) {
link <- url_list$link[i]
ab <- html(link)
all_meta_attrs <- unique(unlist(lapply(lapply(ab %>% html_nodes("meta"), html_attrs), names)))
dat <- data.frame(lapply(all_meta_attrs, function(x) {
ab %>% html_nodes("meta") %>% html_attr(x)
}))
if ((is.null(dat)) | (nrow(dat)==35)) {
url <- link
latitude <- 999
longitude <- 999
locality <- "nope"
region <- "nope"
city <- "nope"
rating <- 9.9
price <- 999
} else {
colnames(dat) <- all_meta_attrs
url <- link
filtered <- dat %>%
select(content, property, itemprop) %>%
filter(property=="airbedandbreakfast:location:latitude" |
property=="airbedandbreakfast:location:longitude" |
property=="airbedandbreakfast:locality" |
property=="airbedandbreakfast:region"|
property=="airbedandbreakfast:city" |
property=="airbedandbreakfast:rating" |
itemprop=="price")
latitude <- filtered %>%
filter(property=="airbedandbreakfast:location:latitude")
latitude <- as.character(latitude$content)
longitude<- filtered %>%
filter(property=="airbedandbreakfast:location:longitude")
longitude <- as.character(longitude$content)
locality<- filtered %>%
filter(property=="airbedandbreakfast:locality")
locality<- as.character(locality$content)
if (is.character(locality) && length(locality) == 0) {
locality <- ""
} else {
locality <- locality
}
region<- filtered %>%
filter(property=="airbedandbreakfast:region")
region<- as.character(region$content)
if (is.character(region) && length(region) == 0) {
region <- ""
} else {
region <- rating
}
city<- filtered %>%
filter(property=="airbedandbreakfast:city")
city<- as.character(city$content)
if (is.character(city) && length(city) == 0) {
city <- ""
} else {
city <- city
}
rating<- filtered %>%
filter(property=="airbedandbreakfast:rating")
rating<- as.character(rating$content)
if (is.character(rating) && length(rating) == 0) {
rating <- ""
} else {
rating <- rating
}
price<- filtered %>%
filter(itemprop=="price")
price<- as.numeric(as.character(price$content))
if (length(price)==0) {
price <- 999
} else {
prince <- price
}
}
print(i)
air_listing <- data.frame(link, latitude, longitude, locality, region, city, rating, price)
if (exists("airbnb_df")) {
airbnb_df <- rbind(airbnb_df, air_listing)
} else {
airbnb_df <- air_listing
}
}
clean <- subset(airbnb_df, !(latitude==999))
leftovers <- subset(airbnb_df, latitude==999)
View(clean)
write.csv("airbnb_latlong.csv")
write.csv(clean, "airbnb_latlong.csv")
library(leaflet)
m <- leaflet(clean) %>% addTiles('http://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png',
attribution='Map tiles by <a href="http://stamen.com">Stamen Design</a>, <a href="http://creativecommons.org/licenses/by/3.0">CC BY 3.0</a> &mdash; Map data &copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>')
m %>% setView(-72.690940, 41.651426, zoom = 8)
m %>% addCircles(~longitude, ~latitude, popup=clean$city, weight = 3, radius=3*clean$price,
color="#ffa500", stroke = TRUE, fillOpacity = 0.8)
m <- leaflet(clean) %>% addTiles('http://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png',
attribution='Map tiles by <a href="http://stamen.com">Stamen Design</a>, <a href="http://creativecommons.org/licenses/by/3.0">CC BY 3.0</a> &mdash; Map data &copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>')
m %>% setView(-72.690940, 41.651426, zoom = 8)
m %>% addCircles(~longitude, ~latitude, popup=clean$city, weight = 3, radius=3*price,
color="#ffa500", stroke = TRUE, fillOpacity = 0.8)
m %>% addCircles(~longitude, ~latitude, popup=clean$city, weight = 3, radius=30,
color="#ffa500", stroke = TRUE, fillOpacity = 0.8)
m <- leaflet(clean) %>% addTiles('http://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png',
attribution='Map tiles by <a href="http://stamen.com">Stamen Design</a>, <a href="http://creativecommons.org/licenses/by/3.0">CC BY 3.0</a> &mdash; Map data &copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>')
m %>% setView(-72.690940, 41.651426, zoom = 8)
m %>% addCircles(~latitude, ~longitude, popup=clean$city, weight = 3, radius=30,
color="#ffa500", stroke = TRUE, fillOpacity = 0.8)
backup_clean <- clean
str(clean)
clean$latitude <- as.numeric(as.character(clean$latitude))
View(clean)
clean$longitude <- as.numeric(as.character(clean$longitude))
clean$rating <- as.numeric(as.character(clean$rating))
clean$price <- as.numeric(as.character(clean$price))
m <- leaflet(clean) %>% addTiles('http://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png',
attribution='Map tiles by <a href="http://stamen.com">Stamen Design</a>, <a href="http://creativecommons.org/licenses/by/3.0">CC BY 3.0</a> &mdash; Map data &copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>')
m %>% setView(-72.690940, 41.651426, zoom = 8)
m %>% addCircles(~latitude, ~longitude, popup=clean$city, weight = 3, radius=30,
color="#ffa500", stroke = TRUE, fillOpacity = 0.8)
m %>% addCircles(~longitude, ~latitude, popup=clean$city, weight = 3, radius=30,
color="#ffa500", stroke = TRUE, fillOpacity = 0.8)
m <- leaflet(clean) %>% addTiles('',
attribution='Map tiles by <a href="http://stamen.com">Stamen Design</a>, <a href="http://creativecommons.org/licenses/by/3.0">CC BY 3.0</a> &mdash; Map data &copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>')
m %>% setView(-72.690940, 41.651426, zoom = 8)
m %>% addCircles(~longitude, ~latitude, popup=clean$city, weight = 3, radius=30,
color="#ffa500", stroke = TRUE, fillOpacity = 0.8)
m <- leaflet(clean) %>% addTiles(
attribution='Map tiles by <a href="http://stamen.com">Stamen Design</a>, <a href="http://creativecommons.org/licenses/by/3.0">CC BY 3.0</a> &mdash; Map data &copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>')
m %>% setView(-72.690940, 41.651426, zoom = 8)
m %>% addCircles(~longitude, ~latitude, popup=clean$city, weight = 3, radius=30,
color="#ffa500", stroke = TRUE, fillOpacity = 0.8)
m <- leaflet(clean) %>% addTiles(
attribution='Map tiles by <a href="http://stamen.com">Stamen Design</a>, <a href="http://creativecommons.org/licenses/by/3.0">CC BY 3.0</a> &mdash; Map data &copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>')
m %>% setView(-72.690940, 41.651426, zoom = 8)
m %>% addCircles(~longitude, ~latitude, popup=clean$url, weight = 3, radius=30,
color="#ffa500", stroke = TRUE, fillOpacity = 0.8)
m <- leaflet(clean) %>% addTiles(
attribution='Map tiles by <a href="http://stamen.com">Stamen Design</a>, <a href="http://creativecommons.org/licenses/by/3.0">CC BY 3.0</a> &mdash; Map data &copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>')
m %>% setView(-72.690940, 41.651426, zoom = 8)
m %>% addCircles(~longitude, ~latitude, popup=clean$link, weight = 3, radius=3*price,
color="#ffa500", stroke = TRUE, fillOpacity = 0.8)
m <- leaflet(clean) %>% addTiles(
attribution='Map tiles by <a href="http://stamen.com">Stamen Design</a>, <a href="http://creativecommons.org/licenses/by/3.0">CC BY 3.0</a> &mdash; Map data &copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>')
m %>% setView(-72.690940, 41.651426, zoom = 8)
m %>% addCircles(~longitude, ~latitude, popup=clean$link, weight = 3, radius=price,
color="#ffa500", stroke = TRUE, fillOpacity = 0.8)
m <- leaflet(clean) %>% addTiles(
attribution='Map tiles by <a href="http://stamen.com">Stamen Design</a>, <a href="http://creativecommons.org/licenses/by/3.0">CC BY 3.0</a> &mdash; Map data &copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>')
m %>% setView(-72.690940, 41.651426, zoom = 8)
m %>% addCircles(~longitude, ~latitude, popup=clean$link, weight = 3, radius=price*.5,
color="#ffa500", stroke = TRUE, fillOpacity = 0.8)
95*.01
m <- leaflet(clean) %>% addTiles(
attribution='Map tiles by <a href="http://stamen.com">Stamen Design</a>, <a href="http://creativecommons.org/licenses/by/3.0">CC BY 3.0</a> &mdash; Map data &copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>')
m %>% setView(-72.690940, 41.651426, zoom = 8)
m %>% addCircles(~longitude, ~latitude, popup=clean$link, weight = 3, radius=40,
color="#ffa500", stroke = TRUE, fillOpacity = clean$price*.001)
m <- leaflet(clean) %>% addTiles(
attribution='Map tiles by <a href="http://stamen.com">Stamen Design</a>, <a href="http://creativecommons.org/licenses/by/3.0">CC BY 3.0</a> &mdash; Map data &copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>')
m %>% setView(-72.690940, 41.651426, zoom = 8)
m %>% addCircles(~longitude, ~latitude, popup=clean$link, weight = 3, radius=40,
color="#ffa500", stroke = TRUE, fillOpacity = clean$price*.01)
m <- leaflet(clean) %>% addTiles(
attribution='Map tiles by <a href="http://stamen.com">Stamen Design</a>, <a href="http://creativecommons.org/licenses/by/3.0">CC BY 3.0</a> &mdash; Map data &copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>')
m %>% setView(-72.690940, 41.651426, zoom = 8)
m %>% addCircles(~longitude, ~latitude, popup=paste(clean$link, "<br '>", clean$price), weight = 3, radius=40,
color="#ffa500", stroke = TRUE, fillOpacity = clean$price*.01)
m <- leaflet(clean) %>% addTiles(
attribution='Map tiles by <a href="http://stamen.com">Stamen Design</a>, <a href="http://creativecommons.org/licenses/by/3.0">CC BY 3.0</a> &mdash; Map data &copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>')
m %>% setView(-72.690940, 41.651426, zoom = 8)
m %>% addCircles(~longitude, ~latitude, popup=paste("$",  clean$price, " per night <br /><a href='", clean$link, "'>link</a>",), weight = 3, radius=40,
color="#ffa500", stroke = TRUE, fillOpacity = clean$price*.01)
m <- leaflet(clean) %>% addTiles(
attribution='Map tiles by <a href="http://stamen.com">Stamen Design</a>, <a href="http://creativecommons.org/licenses/by/3.0">CC BY 3.0</a> &mdash; Map data &copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>')
m %>% setView(-72.690940, 41.651426, zoom = 8)
m %>% addCircles(~longitude, ~latitude, popup=paste("$",  clean$price, " per night <br /><a href='", clean$link, "'>link</a>"), weight = 3, radius=40,
color="#ffa500", stroke = TRUE, fillOpacity = clean$price*.01)
m <- leaflet(clean) %>% addTiles(
attribution='Map tiles by <a href="http://stamen.com">Stamen Design</a>, <a href="http://creativecommons.org/licenses/by/3.0">CC BY 3.0</a> &mdash; Map data &copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>')
m %>% setView(-72.690940, 41.651426, zoom = 8)
m %>% addCircles(~longitude, ~latitude, popup=paste0("$",  clean$price, " per night <br /><a href='", clean$link, "'>link</a>"), weight = 3, radius=40,
color="#ffa500", stroke = TRUE, fillOpacity = clean$price*.01)
m <- leaflet(clean) %>% addTiles('http://{s}.tiles.wmflabs.org/bw-mapnik/{z}/{x}/{y}.png',
attribution='&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>')
m %>% setView(-72.690940, 41.651426, zoom = 8)
m %>% addCircles(~longitude, ~latitude, popup=paste0("$",  clean$price, " per night <br /><a href='", clean$link, "'>link</a>"), weight = 3, radius=40,
color="#0066cc", stroke = TRUE, fillOpacity = clean$price*.01)
m <- leaflet(clean) %>% addTiles('http://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png',
attribution='&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>, Tiles courtesy of <a href="http://hot.openstreetmap.org/" target="_blank">Humanitarian OpenStreetMap Team</a>')
m %>% setView(-72.690940, 41.651426, zoom = 8)
m %>% addCircles(~longitude, ~latitude, popup=paste0("$",  clean$price, " per night <br /><a href='", clean$link, "'>link</a>"), weight = 3, radius=40,
color="#0066cc", stroke = TRUE, fillOpacity = clean$price*.01)
campus <- readOGR(dsn="shapes", layer="ct_campuses")
library(readOGR)
library(rgdal)
campus <- readOGR(dsn="shapes", layer="ct_campuses")
m %>% addPolygons(data=campus, stroke=TRUE, weight=3, fillOpacity=.8, smoothFactor=.5, color="#f72a5f") %>%
addCircles(~longitude, ~latitude, popup=paste0("$",  clean$price, " per night <br /><a href='", clean$link, "'>link</a>"), weight = 3, radius=40,
color="#0066cc", stroke = TRUE, fillOpacity = clean$price*.01)
m %>% addPolygons(data=campus, stroke=TRUE, weight=1, fillOpacity=.8, smoothFactor=.5, color="#f72a5f") %>%
addCircles(~longitude, ~latitude, popup=paste0("$",  clean$price, " per night <br /><a href='", clean$link, "'>link</a>"), weight = 3, radius=40,
color="#0066cc", stroke = TRUE, fillOpacity = clean$price*.01)
m %>% addPolygons(data=campus, stroke=TRUE, weight=1, fillOpacity=.8, smoothFactor=.5, color="#f72a5f") %>%
addCircles(~longitude, ~latitude, popup=paste0("$",  clean$price, " per night <br /><a href='", clean$link, "' target='_blank'>link</a>"), weight = 3, radius=40,
color="#0066cc", stroke = TRUE, fillOpacity = clean$price*.01)
air <- read.csv("airbnb_latlong.csv", stringsAsFactors=FALSE)
View(air)
View(ct_airbnb)
write.csv(ctair, "ctair.csv")
library(swirl)
install.packages("swirl")
library(swirl)
View(ctair)
m %>% addPolygons(data=campus, stroke=TRUE, weight=1, fillOpacity=.8, smoothFactor=.5, color="#f72a5f") %>%
addCircles(~longitude, ~latitude, popup=paste0("$",  clean$price, " per night <br /><a href='", clean$link, "' target='_blank'>link</a>"), weight = 3, radius=40,
color="#0066cc", stroke = TRUE, fillOpacity = clean$price*.01)
library(rvest)
library(dplyr)
library(leaflet)
library(rgdal)
campus <- readOGR(dsn="shapes", layer="ct_campuses")
m <- leaflet(clean) %>% addTiles('http://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png',
attribution='&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>, Tiles courtesy of <a href="http://hot.openstreetmap.org/" target="_blank">Humanitarian OpenStreetMap Team</a>')
m %>% setView(-72.690940, 41.651426, zoom = 8)
m %>% addPolygons(data=campus, stroke=TRUE, weight=1, fillOpacity=.8, smoothFactor=.5, color="#f72a5f") %>%
addCircles(~longitude, ~latitude, popup=paste0("$",  clean$price, " per night <br /><a href='", clean$link, "' target='_blank'>link</a>"), weight = 3, radius=40,
color="#0066cc", stroke = TRUE, fillOpacity = clean$price*.01)
library(ctnamecleaner)
?ctcorrelator
library(trend)
library(trendct)
?trendmap
View(ctair)
trendmap(ctair, headline="Test map for R generator", subhead="This is a subhead",
src="airbnb.com", byline="TrendCT.org", url_append="date", shape="towns", color="yellow-red")
header <- head(ctair)
?trendchart
trendchart(header, headline = "delete this chart", subhead = "", src = "",
byline = "TrendCT.org", type = "column", xTitle = "", yTitle = "",
xSuffix = "", ySuffix = "", xPrefix = "", yPrefix = "", option = "")
trendchart(header, headline = "delete this chart", subhead = "", src = "",
byline = "TrendCT.org", type = "bar", xTitle = "", yTitle = "",
xSuffix = "", ySuffix = "", xPrefix = "", yPrefix = "", option = "")
?fancytable
fancytable(ctair, headline = "delete this table", subhead = "", height = 400,
paging = "false", sourceline = "", byline = "TrendCT.org", col = 0,
desc_asc = "desc")
m <- leaflet(clean) %>% addTiles('http://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png',
attribution='&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>, Tiles courtesy of <a href="http://hot.openstreetmap.org/" target="_blank">Humanitarian OpenStreetMap Team</a>')
m %>% setView(-72.690940, 41.651426, zoom = 8)
m %>% addPolygons(data=campus, stroke=TRUE, weight=1, fillOpacity=.8, smoothFactor=.5, color="#f72a5f") %>%
addCircles(~longitude, ~latitude, popup=paste0("$",  clean$price, " per night <br /><a href='", clean$link, "' target='_blank'>link</a>"), weight = 3, radius=40,
color="#0066cc", stroke = TRUE, fillOpacity = clean$price*.01)
?ctcorelator
?ctcorrelator
ctcorrelator <- function(ctair, p=.9)
ctcorrelator(ctair, p=.9)
ctcorrelator(ctair, p=.9)
head(ctair)
ctair_1 <- ctair[c("town", "airbnbs")]
ctcorrelator(ctair_1, p=.9)
head(ctair_1)
library(rvest)
library(dplyr)
library(leaflet)
View(url_list)
View(url_list)
url_list <- read.csv("boston2.csv", stringsAsFactors=FALSE)
url_list <- url_list[c("link")]
url_list <- unique(url_list)
url_list <- read.csv("boston2.csv", stringsAsFactors=FALSE)
url_list <- url_list[c("link")]
url_list <- unique(url_list)
url_list <- read.csv("just_urls.csv", stringsAsFactors=FALSE)
url_list <- url_list[c("link")]
url_list <- unique(url_list)
View(url_list)
url_list <- read.csv("boston2.csv", stringsAsFactors=FALSE)
url_list <- url_list[c("link")]
url_list <- unique(url_list)
setwd("~/Documents/Github/airbnb_ct/boston")
url_list <- read.csv("boston2.csv", stringsAsFactors=FALSE)
url_list <- url_list[c("link")]
url_list <- unique(url_list)
for (i in 1:nrow(url_list)) {
link <- url_list$link[i]
ab <- html(link)
all_meta_attrs <- unique(unlist(lapply(lapply(ab %>% html_nodes("meta"), html_attrs), names)))
dat <- data.frame(lapply(all_meta_attrs, function(x) {
ab %>% html_nodes("meta") %>% html_attr(x)
}))
if ((is.null(dat)) | (nrow(dat)==35)) {
url <- link
latitude <- 999
longitude <- 999
locality <- "nope"
region <- "nope"
city <- "nope"
rating <- 9.9
price <- 999
} else {
colnames(dat) <- all_meta_attrs
url <- link
filtered <- dat %>%
select(content, property, itemprop) %>%
filter(property=="airbedandbreakfast:location:latitude" |
property=="airbedandbreakfast:location:longitude" |
property=="airbedandbreakfast:locality" |
property=="airbedandbreakfast:region"|
property=="airbedandbreakfast:city" |
property=="airbedandbreakfast:rating" |
itemprop=="price")
latitude <- filtered %>%
filter(property=="airbedandbreakfast:location:latitude")
latitude <- as.character(latitude$content)
longitude<- filtered %>%
filter(property=="airbedandbreakfast:location:longitude")
longitude <- as.character(longitude$content)
locality<- filtered %>%
filter(property=="airbedandbreakfast:locality")
locality<- as.character(locality$content)
if (is.character(locality) && length(locality) == 0) {
locality <- ""
} else {
locality <- locality
}
region<- filtered %>%
filter(property=="airbedandbreakfast:region")
region<- as.character(region$content)
if (is.character(region) && length(region) == 0) {
region <- ""
} else {
region <- region
}
city<- filtered %>%
filter(property=="airbedandbreakfast:city")
city<- as.character(city$content)
if (is.character(city) && length(city) == 0) {
city <- ""
} else {
city <- city
}
rating<- filtered %>%
filter(property=="airbedandbreakfast:rating")
rating<- as.character(rating$content)
if (is.character(rating) && length(rating) == 0) {
rating <- ""
} else {
rating <- rating
}
price<- filtered %>%
filter(itemprop=="price")
price<- as.numeric(as.character(price$content))
if (length(price)==0) {
price <- 999
} else {
prince <- price
}
}
print(i)
air_listing <- data.frame(link, latitude, longitude, locality, region, city, rating, price)
if (exists("airbnb_df")) {
airbnb_df <- rbind(airbnb_df, air_listing)
} else {
airbnb_df <- air_listing
}
}
clean <- subset(airbnb_df, !(latitude==999))
leftovers <- subset(airbnb_df, latitude==999)
backup_clean <- clean
clean$latitude <- as.numeric(as.character(clean$latitude))
clean$longitude <- as.numeric(as.character(clean$longitude))
clean$rating <- as.numeric(as.character(clean$rating))
clean$price <- as.numeric(as.character(clean$price))
View(clean)
View(url_list)
View(url_list)
head(clean)
url_list <- read.csv("boston2.csv", stringsAsFactors=FALSE)
url_list <- url_list[c("link")]
url_list <- unique(url_list)
for (i in 1:nrow(url_list)) {
link <- url_list$link[i]
ab <- html(link)
all_meta_attrs <- unique(unlist(lapply(lapply(ab %>% html_nodes("meta"), html_attrs), names)))
dat <- data.frame(lapply(all_meta_attrs, function(x) {
ab %>% html_nodes("meta") %>% html_attr(x)
}))
if ((is.null(dat)) | (nrow(dat)==35)) {
url <- link
latitude <- 999
longitude <- 999
locality <- "nope"
region <- "nope"
city <- "nope"
rating <- 9.9
price <- 999
} else {
colnames(dat) <- all_meta_attrs
url <- link
filtered <- dat %>%
select(content, property, itemprop) %>%
filter(property=="airbedandbreakfast:location:latitude" |
property=="airbedandbreakfast:location:longitude" |
property=="airbedandbreakfast:locality" |
property=="airbedandbreakfast:region"|
property=="airbedandbreakfast:city" |
property=="airbedandbreakfast:rating" |
itemprop=="price")
latitude <- filtered %>%
filter(property=="airbedandbreakfast:location:latitude")
latitude <- as.character(latitude$content)
longitude<- filtered %>%
filter(property=="airbedandbreakfast:location:longitude")
longitude <- as.character(longitude$content)
locality<- filtered %>%
filter(property=="airbedandbreakfast:locality")
locality<- as.character(locality$content)
if (is.character(locality) && length(locality) == 0) {
locality <- ""
} else {
locality <- locality
}
region<- filtered %>%
filter(property=="airbedandbreakfast:region")
region<- as.character(region$content)
if (is.character(region) && length(region) == 0) {
region <- ""
} else {
region <- region
}
city<- filtered %>%
filter(property=="airbedandbreakfast:city")
city<- as.character(city$content)
if (is.character(city) && length(city) == 0) {
city <- ""
} else {
city <- city
}
rating<- filtered %>%
filter(property=="airbedandbreakfast:rating")
rating<- as.character(rating$content)
if (is.character(rating) && length(rating) == 0) {
rating <- ""
} else {
rating <- rating
}
price<- filtered %>%
filter(itemprop=="price")
price<- as.numeric(as.character(price$content))
if (length(price)==0) {
price <- 999
} else {
prince <- price
}
}
print(i)
air_listing <- data.frame(link, latitude, longitude, locality, region, city, rating, price)
if (exists("airbnb_df")) {
airbnb_df <- rbind(airbnb_df, air_listing)
} else {
airbnb_df <- air_listing
}
}
clean <- subset(airbnb_df, !(latitude==999))
leftovers <- subset(airbnb_df, latitude==999)
backup_clean <- clean
View(backup_clean)
library(leaflet)
library(rgdal)
campus <- readOGR(dsn="shapes", layer="boston_campuses")
m <- leaflet(clean) %>% addTiles('http://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png',
attribution='&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>, Tiles courtesy of <a href="http://hot.openstreetmap.org/" target="_blank">Humanitarian OpenStreetMap Team</a>')
m %>% setView(-72.690940, 41.651426, zoom = 8)
m %>% addPolygons(data=campus, stroke=TRUE, weight=1, fillOpacity=.8, smoothFactor=.5, color="#f72a5f") %>%
addCircles(~longitude, ~latitude, popup=paste0("$",  clean$price, " per night <br /><a href='", clean$link, "' target='_blank'>link</a>"), weight = 3, radius=40,
color="#0066cc", stroke = TRUE, fillOpacity = clean$price*.01)
